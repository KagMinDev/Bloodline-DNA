import { useEffect } from "react";
import type { UserFeedback } from "../api/existingFeedbackApi";

interface FeedbackDebugInfo {
  userId: string | null;
  testServiceId: string | null;
  bookingStatus: string;
  existingFeedback: UserFeedback | null;
  isCheckingFeedback: boolean;
}

export const useFeedbackDebug = ({
  userId,
  testServiceId,
  bookingStatus,
  existingFeedback,
  isCheckingFeedback
}: FeedbackDebugInfo) => {
  
  useEffect(() => {
    // Chỉ debug khi booking completed
    if (bookingStatus === "Completed" && userId && testServiceId) {
      
      // Log thông tin cơ bản
      console.group("🔍 FEEDBACK DEBUG ANALYSIS");
      console.log("📋 Basic Info:", {
        userId,
        testServiceId,
        bookingStatus,
        timestamp: new Date().toISOString()
      });
      
      // Log trạng thái checking
      console.log("⏳ Checking State:", {
        isCheckingFeedback,
        hasUserId: !!userId,
        hasTestServiceId: !!testServiceId
      });
      
      // Phân tích chi tiết feedback
      if (existingFeedback) {
        console.log("📊 Existing Feedback Analysis:", {
          id: existingFeedback.id,
          userId: existingFeedback.userId,
          testServiceId: existingFeedback.testServiceId,
          rating: existingFeedback.rating,
          ratingType: typeof existingFeedback.rating,
          hasComment: !!existingFeedback.comment,
          commentLength: existingFeedback.comment?.length || 0,
          createdAt: existingFeedback.createdAt,
          updatedAt: existingFeedback.updatedAt
        });
        
        // Kiểm tra validation
        const isValidFeedback = 
          typeof existingFeedback === 'object' &&
          existingFeedback.id &&
          existingFeedback.userId &&
          existingFeedback.testServiceId &&
          typeof existingFeedback.rating === 'number' &&
          existingFeedback.rating >= 1 && 
          existingFeedback.rating <= 5;
          
        console.log("✅ Validation Check:", {
          isValidFeedback,
          hasId: !!existingFeedback.id,
          hasUserId: !!existingFeedback.userId,
          hasTestServiceId: !!existingFeedback.testServiceId,
          ratingIsNumber: typeof existingFeedback.rating === 'number',
          ratingInRange: existingFeedback.rating >= 1 && existingFeedback.rating <= 5
        });
        
        // Cảnh báo nếu có vấn đề
        if (!isValidFeedback) {
          console.warn("🚨 INVALID FEEDBACK DETECTED!");
          console.warn("This feedback should not be displayed as it fails validation");
        }
        
        // Kiểm tra xem có phải là feedback tự động không
        if (existingFeedback.rating === 5 && (!existingFeedback.comment || existingFeedback.comment === "tốt")) {
          console.warn("🤖 POTENTIAL AUTO-GENERATED FEEDBACK DETECTED!");
          console.warn("Rating: 5 stars with minimal/default comment");
          
          // Kiểm tra timing
          const createdTime = new Date(existingFeedback.createdAt);
          const updatedTime = new Date(existingFeedback.updatedAt);
          const timeDiff = updatedTime.getTime() - createdTime.getTime();
          
          console.log("⏰ Timing Analysis:", {
            createdAt: existingFeedback.createdAt,
            updatedAt: existingFeedback.updatedAt,
            timeDifferenceMs: timeDiff,
            timeDifferenceSeconds: timeDiff / 1000,
            possibleAutoGenerated: timeDiff < 1000 // Less than 1 second difference
          });
        }
        
      } else {
        console.log("📝 No existing feedback found - this is normal for new bookings");
      }
      
      console.groupEnd();
    }
  }, [userId, testServiceId, bookingStatus, existingFeedback, isCheckingFeedback]);
  
  // Return analysis result
  return {
    hasValidFeedback: existingFeedback && 
      typeof existingFeedback === 'object' &&
      existingFeedback.id &&
      existingFeedback.userId &&
      existingFeedback.testServiceId &&
      typeof existingFeedback.rating === 'number' &&
      existingFeedback.rating >= 1 && 
      existingFeedback.rating <= 5,
    
    isPotentialAutoFeedback: existingFeedback?.rating === 5 && 
      (!existingFeedback.comment || existingFeedback.comment === "tốt")
  };
};
